use once_cell::sync::Lazy;

// Mnemonics for all 6502 CPU instructions
// Ref: http://www.thealmightyguru.com/Games/Hacking/Wiki/index.php/6502_Opcodes
#[derive(Debug)]
pub enum Mnemonic {
    LDA, LDX, LDY, STA, STX, STY, TAX, TAY, TSX, TXA, TXS, TYA,     // Storage
    ADC, DEC, DEX, DEY, INC, INX, INY, SBC,                         // Math
    AND, ASL, BIT, EOR, LSR, ORA, ROL, ROR,                         // Bitwise
    BCC, BCS, BEQ, BMI, BNE, BPL, BVC, BVS,                         // Branch
    JMP, JSR, RTI, RTS,                                             // Jump
    CLC, CLD, CLI, CLV, CMP, CPX, CPY, SEC, SED, SEI,               // Registers
    PHA, PHP, PLA, PLP,                                             // Stack
    BRK, NOP,                                                       // System
    XXX,
}

// All possible 6502 addressing modes
// Addressing modes define how the CPU fetched the required operands for an instructions
// Ref: http://www.thealmightyguru.com/Games/Hacking/Wiki/index.php?title=Addressing_Modes
#[derive(Debug)]
pub enum AddressingMode {
    ZP0,        // ZeroPage             Operand is an address and only the low byte is used,         ex: LDA $EE
    ZPX,        // Indexed ZeroPage X   Operand is 1-byte address, X register is added to it         eg: STA $00,X
    ZPY,        // Indexed ZeroPage Y   Operand is 1-byte address, Y register is added to it         eg: STA $00,Y
    ABS,        // Absolute             Operand is an address and and both bytes are used,           ex: LDA $16A0
    ABX,        // Indexed Absolute X   Operand is 2-byte address, X register is added to it         eg: STA $1000,X
    ABY,        // Indexed Absolute Y   Operand is 2-byte address, Y register is added to it         eg: STA $1000,Y
    IND,        // Indirect             Memory location is 2-byte pointer at adjacent locations      eg: JMP ($0020)
    IMP,        // Implied              No operands, addressing is implied by the instruction,       eg: TAX
    ACC,        // Accumulator          No operands, accumulator is implied,                         eg: ASL
    IMM,        // Immediate            Operand value is contained in instruction itself,            ex: LDA #$07
    REL,        // Relative             1-byte signed operand is added to the program counter        eg: BEQ $04
    IZX,        // Indexed Indirect     2-byte pointer from 1-byte address and adding X register     eg: LDA ($40, X)
    IZY,        // Indirect Indexed     2-byte pointer from 1-byte address and adding Y after read   eg: LDA ($46), Y
}

pub type OpCode = u8;

#[derive(Debug)]
pub struct Instruction {
    pub mnemonic: Mnemonic,
    pub mode: AddressingMode,
    pub cycles: u8
}

impl Instruction {
    pub fn decode(opcode: OpCode) -> &'static Instruction {
        &INSTRUCTION_MAP[opcode as usize]
    }
}

static INSTRUCTION_MAP: Lazy<[Instruction; 256]> = Lazy::new(|| {[
    Instruction { mnemonic: Mnemonic::BRK, mode: AddressingMode::IMM, cycles: 7 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 3 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::ASL, mode: AddressingMode::ZP0, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::PHP, mode: AddressingMode::IMP, cycles: 3 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::ASL, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ASL, mode: AddressingMode::ABS, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::BPL, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::IZY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ASL, mode: AddressingMode::ZPX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::CLC, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ORA, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ASL, mode: AddressingMode::ABX, cycles: 7 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::JSR, mode: AddressingMode::ABS, cycles: 6 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::BIT, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::ROL, mode: AddressingMode::ZP0, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::PLP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::ROL, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::BIT, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ROL, mode: AddressingMode::ABS, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::BMI, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::IZY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ROL, mode: AddressingMode::ZPX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::SEC, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::AND, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ROL, mode: AddressingMode::ABX, cycles: 7 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::RTI, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 3 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::LSR, mode: AddressingMode::ZP0, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::PHA, mode: AddressingMode::IMP, cycles: 3 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::LSR, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::JMP, mode: AddressingMode::ABS, cycles: 3 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LSR, mode: AddressingMode::ABS, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::BVC, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::IZY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LSR, mode: AddressingMode::ZPX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::CLI, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::EOR, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LSR, mode: AddressingMode::ABX, cycles: 7 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::RTS, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 3 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::ROR, mode: AddressingMode::ZP0, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::PLA, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::ROR, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::JMP, mode: AddressingMode::IND, cycles: 5 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ROR, mode: AddressingMode::ABS, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::BVS, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::IZY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ROR, mode: AddressingMode::ZPX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::SEI, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ADC, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::ROR, mode: AddressingMode::ABX, cycles: 7 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::STA, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::STY, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::STA, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::STX, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 3 },
    Instruction { mnemonic: Mnemonic::DEY, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::TXA, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::STY, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::STA, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::STX, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::BCC, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::STA, mode: AddressingMode::IZY, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::STY, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::STA, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::STX, mode: AddressingMode::ZPY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::TYA, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::STA, mode: AddressingMode::ABY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::TXS, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::STA, mode: AddressingMode::ABX, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::LDY, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::LDX, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::LDY, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::LDX, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 3 },
    Instruction { mnemonic: Mnemonic::TAY, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::TAX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::LDY, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LDX, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::BCS, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::IZY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::LDY, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LDX, mode: AddressingMode::ZPY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::CLV, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::TSX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LDY, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LDA, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::LDX, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::CPY, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::CPY, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::DEC, mode: AddressingMode::ZP0, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::INY, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::DEX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::CPY, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::DEC, mode: AddressingMode::ABS, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::BNE, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::IZY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::DEC, mode: AddressingMode::ZPX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::CLD, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::CMP, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::DEC, mode: AddressingMode::ABX, cycles: 7 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::CPX, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::IZX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::CPX, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::ZP0, cycles: 3 },
    Instruction { mnemonic: Mnemonic::INC, mode: AddressingMode::ZP0, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 5 },
    Instruction { mnemonic: Mnemonic::INX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::IMM, cycles: 2 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::CPX, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::ABS, cycles: 4 },
    Instruction { mnemonic: Mnemonic::INC, mode: AddressingMode::ABS, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::BEQ, mode: AddressingMode::REL, cycles: 2 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::IZY, cycles: 5 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 8 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::ZPX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::INC, mode: AddressingMode::ZPX, cycles: 6 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 6 },
    Instruction { mnemonic: Mnemonic::SED, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::ABY, cycles: 4 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 2 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
    Instruction { mnemonic: Mnemonic::NOP, mode: AddressingMode::IMP, cycles: 4 },
    Instruction { mnemonic: Mnemonic::SBC, mode: AddressingMode::ABX, cycles: 4 },
    Instruction { mnemonic: Mnemonic::INC, mode: AddressingMode::ABX, cycles: 7 },
    Instruction { mnemonic: Mnemonic::XXX, mode: AddressingMode::IMP, cycles: 7 },
]
});
